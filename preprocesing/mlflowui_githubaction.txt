## Membawa Log MLflow dari GitHub Actions ke MLflow UI Lokal

Anda tidak bisa langsung melihat MLflow UI dari GitHub Actions karena itu adalah lingkungan sementara tanpa antarmuka grafis. Namun, Anda bisa **mengunduh log MLflow yang dihasilkan di sana dan kemudian menjalankannya secara lokal.**

Ini langkah-langkahnya:

1.  **Pastikan Konfigurasi Anda Benar:**
    * **Kode Python Anda:** Pastikan `mlflow.set_tracking_uri("file:///tmp/mlruns")` ada di skrip preprocessing Anda. Ini akan membuat log MLflow di direktori sementara pada *runner* GitHub Actions.
    * **Kode YAML GitHub Actions Anda:** Pastikan Anda punya langkah untuk mengunggah log MLflow sebagai artefak. Ini yang paling penting. Contohnya:

        ```yaml
        - name: Upload MLflow Logs
          uses: actions/upload-artifact@v4
          with:
            name: mlflow-logs # Nama artefak yang akan Anda unduh
            path: /tmp/mlruns/ # Lokasi log MLflow di runner GitHub Actions
        ```

2.  **Jalankan Workflow di GitHub Actions:**
    * Piculah *workflow* Anda (misalnya, dengan `git push` atau `workflow_dispatch`).
    * Biarkan *workflow* berjalan hingga selesai dengan status "Success".

3.  **Unduh Log MLflow dari GitHub:**
    * Buka repositori Anda di GitHub, lalu navigasikan ke tab **Actions**.
    * Klik pada *workflow run* yang baru saja Anda jalankan.
    * Gulir ke bawah ke bagian **Artifacts**.
    * Anda akan melihat artefak bernama **`mlflow-logs`** (atau nama yang Anda berikan di YAML). Klik untuk mengunduhnya ke komputer lokal Anda. File ini akan berupa arsip `.zip`.

4.  **Ekstrak dan Buka MLflow UI Secara Lokal:**
    * Temukan file `.zip` yang Anda unduh (misalnya, `mlflow-logs.zip`).
    * **Ekstrak** file tersebut. Anda akan menemukan sebuah folder, dan di dalamnya akan ada folder bernama **`mlruns`**. Misalnya: `[nama_folder_ekstraksi]/mlruns/`.
    * Buka **Terminal (Linux/macOS)** atau **Command Prompt/PowerShell (Windows)** Anda.
    * **Navigasikan ke *direktori induk* dari folder `mlruns` yang Anda ekstrak.** Ini krusial! Contohnya, jika `mlruns` berada di `C:\Users\User\Downloads\mlflow-logs\mlruns`, maka Anda harus `cd` ke `C:\Users\User\Downloads\mlflow-logs\`.
    * Setelah Anda berada di direktori yang benar (yang berisi folder `mlruns`), jalankan perintah:
        ```bash
        mlflow ui
        ```
    * Bflow UI akan terbuka di browser Anda (biasanya di `http://127.0.0.1:5000` atau `http://localhost:5000`). Anda akan melihat semua eksperimen, parameter, metrik, dan **artefak** (termasuk file data hasil preprocessing jika Anda melognya dengan `mlflow.log_artifact`) yang dihasilkan dari *run* GitHub Actions Anda.

Dengan cara ini, Anda efektif "memindahkan" log MLflow dari lingkungan sementara GitHub Actions ke mesin lokal Anda untuk dianalisis.


### Bagaimana Cara Melihat Semua 10 Proses dalam Satu MLflow UI?

Untuk melihat semua 10 *run* (atau lebih) dalam satu MLflow UI yang terpusat di lokal Anda, Anda perlu **menggabungkan (merge) semua folder `mlruns` yang terpisah itu menjadi satu folder `mlruns` utama** di komputer lokal Anda.

Berikut caranya:

1.  **Buat Folder `mlruns_master` di Lokal Anda:**
    * Di komputer lokal Anda, buat sebuah folder kosong, misalnya di `C:\Users\NamaAnda\mlflow_all_runs\` atau `/home/namaanda/mlflow_all_runs/`.
    * Di dalam folder ini, buat subfolder bernama **`mlruns`**. Jadi, path lengkapnya akan menjadi `C:\Users\NamaAnda\mlflow_all_runs\mlruns` atau `/home/namaanda/mlflow_all_runs/mlruns`.

2.  **Unduh dan Ekstrak SEMUA Artefak `mlflow-logs`:**
    * Dari setiap 10 *run* GitHub Actions yang Anda lakukan, unduh artefak `mlflow-logs.zip`.
    * **Ekstrak setiap file ZIP tersebut ke lokasi sementara.** (Misalnya, buat folder `temp_run1`, `temp_run2`, dst., lalu ekstrak masing-masing ZIP ke foldernya). Anda akan mendapatkan struktur seperti `temp_run1/mlruns/`, `temp_run2/mlruns/`, dst.

3.  **Gabungkan Konten Setiap Folder `mlruns`:**
    * Untuk setiap folder `mlruns` yang Anda ekstrak (misalnya, dari `temp_run1/mlruns/`), **salin semua subfoldernya** (yang bernama dengan ID *run* yang panjang) ke dalam folder `mlruns` master yang Anda buat di Langkah 1.
    * Contoh:
        * Anda akan menemukan folder seperti `0123456789abcdef0123456789abcdef` di dalam `temp_run1/mlruns/`.
        * Salin folder `0123456789abcdef0123456789abcdef` itu ke dalam `C:\Users\NamaAnda\mlflow_all_runs\mlruns`.
        * Lakukan ini untuk semua 10 folder `mlruns` yang Anda unduh.
    * Karena setiap ID *run* itu unik, tidak akan ada konflik saat menyalin.

4.  **Jalankan MLflow UI dari Folder Master:**
    * Buka terminal Anda.
    * Navigasi ke direktori induk dari folder `mlruns` master Anda (misalnya, `cd C:\Users\NamaAnda\mlflow_all_runs\`).
    * Jalankan `mlflow ui`.

Sekarang, MLflow UI akan memuat semua 10 *run* (atau lebih) yang telah Anda gabungkan ke dalam satu folder `mlruns` master, dan Anda bisa melihat serta membandingkan semuanya di antarmuka yang sama.

Ini adalah cara standar untuk mengelola log MLflow dari berbagai sumber (misalnya, dari beberapa mesin atau *pipeline* CI/CD) ke dalam satu tampilan terpusat di lokal Anda.