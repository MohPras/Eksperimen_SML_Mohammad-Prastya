name: Build & Push Model Docker Image

on:
  workflow_dispatch: # Memungkinkan untuk dipicu secara manual dari GitHub Actions UI
    inputs:
      mlflow_run_id:
        description: 'MLflow Run ID of the model to deploy (e.g., from training workflow logs)'
        required: true # Kita akan selalu butuh ID run yang spesifik
        type: string

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    # Variabel lingkungan untuk repositori artifacts kamu
    env:
      # Ini adalah lokasi di mana kamu menyimpan artifacts MLflow secara persisten.
      # Sesuaikan dengan URL repositori 'mlflow-artifacts' kamu.
      MLFLOW_ARTIFACTS_REPO_PATH: "mlflow-artifacts" # Nama folder lokal setelah clone

    steps:
      - name: Checkout Workflow Repository
        uses: actions/checkout@v3

      - name: Clone MLflow Artifacts Repository
        run: |
          # Konfigurasi Git untuk akses ke repositori privat (jika repo mlflow-artifacts privat)
          git config --global user.email "ci-bot@github.com"
          git config --global user.name "github-actions[bot]"
          
          # Clone repositori yang berisi log MLflow kamu.
          # Sesuaikan URL dengan repositori 'mlflow-artifacts' kamu yang sebenarnya.
          git clone https://x-access-token:${{ secrets.ARTIFACT_TOKEN }}@github.com/MohPras/mlflow-artifacts.git ${{ env.MLFLOW_ARTIFACTS_REPO_PATH }}
        env:
          # Pastikan kamu telah mengatur ARTIFACT_TOKEN sebagai Secret di repositori ini.
          # Token ini harus punya izin baca (read) ke repositori 'mlflow-artifacts'.
          ARTIFACT_TOKEN: ${{ secrets.ARTIFACT_TOKEN }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install MLflow
        run: |
          python -m pip install --upgrade pip
          pip install mlflow

      - name: Set MLflow Tracking URI to Cloned Repo
        run: |
          # Atur MLFLOW_TRACKING_URI ke direktori lokal hasil clone.
          echo "MLFLOW_TRACKING_URI=${{ github.workspace }}/${{ env.MLFLOW_ARTIFACTS_REPO_PATH }}" >> $GITHUB_ENV
          echo "DEBUG: MLFLOW_TRACKING_URI set to: ${{ github.workspace }}/${{ env.MLFLOW_ARTIFACTS_REPO_PATH }}"

      - name: Debug MLflow Artifacts Structure
        run: |
          echo "Listing contents of cloned MLflow artifacts repo:"
          ls -lR ${{ env.MLFLOW_ARTIFACTS_REPO_PATH }}/0/${{ github.event.inputs.mlflow_run_id }}/artifacts/ || true
          # '|| true' agar step tidak fail jika path belum ada (akan fail di step selanjutnya)

      - name: Build Docker Image
        # Gunakan 'runs:/<run_id>/artifacts/model' untuk menunjuk model di dalam MLflow Tracking Server (repositori yang di-clone)
        # Model URI akan menjadi relatif terhadap MLFLOW_TRACKING_URI
        run: |
          MODEL_URI="runs:/${{ github.event.inputs.mlflow_run_id }}/artifacts/model"
          echo "DEBUG: Attempting to build Docker image from model URI: $MODEL_URI"
          mlflow models build-docker --model-uri "$MODEL_URI" --name "iot-model"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag Docker Image
        run: |
          docker tag iot-model ${{ secrets.DOCKER_HUB_USERNAME }}/iot-model:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/iot-model:latest